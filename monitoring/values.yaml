kube-prometheus-stack:
  grafana:
    enabled: true
    admin:
      existingSecret: grafana-user
      userKey: grafana-user
      passwordKey: grafana-password

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - grafana.orcamentos.app
      tls:
        - secretName: grafana-tls
          hosts:
            - grafana.orcamentos.app

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: monitoring
        label: grafana_dashboard
        labelValue: "1"
      datasources:
        enabled: true
        searchNamespace: monitoring

  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.middlewares: monitoring-prometheus-auth@kubernetescrd,monitoring-prometheus-ratelimit@kubernetescrd
      hosts:
        - prometheus.orcamentos.app
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.orcamentos.app

  alertmanager:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.middlewares: monitoring-prometheus-auth@kubernetescrd,monitoring-prometheus-ratelimit@kubernetescrd
      hosts:
        - alertmanager.orcamentos.app
      tls:
        - secretName: alertmanager-tls
          hosts:
            - alertmanager.orcamentos.app

  defaultRules:
    create: true

  dashboards:
    enabled: true
    default:
      enabled: true

  kubeStateMetrics:
    enabled: true

  nodeExporter:
    enabled: true
